# mtr_script_settings.yaml
#
# General settings for MTR monitor script

# === Logging ===
log_directory: /opt/scripts/MTR_WEB/logs/

# Per-script log levels (used by setup_logger)
logging_levels:
  controller: INFO
  mtr_monitor: DEBUG
  graph_generator: INFO
  html_generator: INFO
  html_builder: INFO
  index_generator: INFO

# === RRD and Graphing ===
rrd_directory: /opt/scripts/MTR_WEB/data/
graph_output_directory: /opt/scripts/MTR_WEB/html/graphs/
max_hops: 30
graph_width: 800
graph_height: 200


#step and rows determine how long your data is retained.
#You can mix different cf functions (e.g. MAX to highlight spikes).
#When updating this config:
#It only affects newly created RRDs.
#Existing .rrd files must be deleted and recreated to apply new RRA settings (or use rrdtool tune but that's more advanced and limited).

rrd:
  step: 60         # Collect data every 60 seconds
  heartbeat: 120   # Max time allowed between samples

  data_sources:
    - name: avg
      type: GAUGE
      min: 0
      max: 1000
    - name: last
      type: GAUGE
      min: 0
      max: 1000
    - name: best
      type: GAUGE
      min: 0
      max: 1000
    - name: loss
      type: GAUGE
      min: 0
      max: 100

  #RRA Calculation formula: rows = (retention_duration_seconds) / (step * base_step_seconds)
  #retention_duration_seconds = days in seconds (7 days example: 604800)
  #step = rras step (5)
  #base_step_seconds = rrd step (60)
  #Calc Part 1: 60 * 5 = 300
  #Calc Part 2: 604800 / 300 = 2016
  
  rras:
    - cf: AVERAGE
      xff: 0.5
      step: 1       # 1x base step (60s)
      rows: 1440    # 1 day of 60s data

    # 1-minute resolution for 1 day
    - cf: AVERAGE
      xff: 0.5
      step: 1           # 1 × 60s = 1min
      rows: 1440        # 1 day (24h × 60min)

    # 5-minute resolution for 7 days
    - cf: AVERAGE
      xff: 0.5
      step: 5           # 5 × 60s = 5min
      rows: 2016        # 7 days

    # 15-minute resolution for 30 days
    - cf: AVERAGE
      xff: 0.5
      step: 15          # 15 × 60s = 15min
      rows: 2880        # 30 days (30 × 24 × 4)

    # 1-hour resolution for 90 days
    - cf: AVERAGE
      xff: 0.5
      step: 60          # 60 × 60s = 1h
      rows: 2160        # 90 days (90 × 24)

    # Optional MAX RRA for detecting spikes
    - cf: MAX
      xff: 0.5
      step: 5
      rows: 2016

    # Optional MIN RRA for low dips
    - cf: MIN
      xff: 0.5
      step: 5
      rows: 2016

# === Traceroute ===
traceroute_directory: /opt/scripts/MTR_WEB/traces/

# === Monitoring ===
interval_seconds: 60

# === HTML Settings ===
html_auto_refresh_seconds: 0
log_lines_display: 50

graph_time_ranges:
  - label: "1h"
    seconds: 3600
  - label: "6h"
    seconds: 21600
  - label: "12h"
    seconds: 43200
  - label: "24h"
    seconds: 86400

# === Cleanup Retention ===
retention:
  rrd_days: 30
  logs_days: 60
  traceroute_days: 45
  graphs_days: 7
  html_days: 10

graph_cleanup_safety_seconds: 180

# === Custom Logging Severity Rules - Optional ===
log_severity_rules:
  - tag: LOSS_SPIKE
    level: WARNING
    match: "loss > 10"
  - tag: HOP_CHANGED
    level: INFO
    match: "hop_changed"
  - tag: LOSS_RECOVERED
    level: INFO
    match: "prev_loss > 0 and loss == 0"

# === FPing Path ===
fping_path: /usr/sbin/fping

# === Optional FPing in index.html ===
enable_fping_check: true

# === Alerting (Not yet implemented) ===
# alert_email_to: "alerts@example.com"
# loss_threshold: 50
# debounce_seconds: 300
